from defines.bash_debugger import *
test=bash_debugger()
test.load(r'C:\Users\admin\Desktop\calc.exe')
print('error = ',kernel32.GetLastError())
print('正在获取进程句柄')
print(f'进程句柄为{test.get_process_handle(test.PID)}')
print('error = ',kernel32.GetLastError())
print(f'线程句柄为{test.get_thread_handle(test.TID)}')
print('error = ',kernel32.GetLastError())
print(f'快照句柄为{test.get_hSnapshot_handle(TH32CS_SNAPTHREAD,test.PID)}')
print('error = ',kernel32.GetLastError())
a=input('准备退出打开进程')
test.debugStop(test.PID)
print('error = ',kernel32.GetLastError())
a=input('已退出打开进程')
test.PID=eval(input('注意！PID已偏移，请打开控制台，从新获取PID'))
a=input('正在附着进程')
test.attach(test.PID)
print('error = ',kernel32.GetLastError())
a=input('已附着进程')
debug=DEBUG_EVENT()
print('正在获取进程信息')
test.wait(INFINITE,debug)
#kernel32.WaitForDebugEventEx(byref(debug),INFINITE)
print('error = ',kernel32.GetLastError())
test.PID=debug.dwProcessId
test.TID=debug.dwThreadId
print(f'获取到的PID为{test.PID}，TID为{test.TID}')
test.ContinueEvent(test.PID,test.TID)
print('error = ',kernel32.GetLastError())
a=input('已继续进程')
test.debugStop(test.PID)
print('error = ',kernel32.GetLastError())
a=input('已退出附着进程')
